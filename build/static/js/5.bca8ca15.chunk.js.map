{"version":3,"sources":["Components/quotesPages/QuoteISingleItem.module.css","Components/quotesPages/NoQuotesFound.module.css","Components/quotesPages/QuoteISingleItem.js","Components/quotesPages/QuoteManyList.js","Components/quotesPages/NoQuotesFound.js","Components/Pages/Quotes.js"],"names":["module","exports","QuoteISingleItem","props","className","classes","quotesAnimation","id","style","borderLeft","overflow","quote","author","role","to","QuoteManyList","quotes","ascending","filterCategory","useRef","history","useHistory","location","useLocation","useState","filteredCategory","setFilteredCategory","isSortingAscending","URLSearchParams","search","get","filteredData","sort","quoteA","quoteB","filter","category","type","onClick","push","pathname","ref","onChange","selectedCategory","current","value","selected","map","NoQuotesFound","noquotes","position","Quotes","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length","console","log"],"mappings":"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","file":"static/js/5.bca8ca15.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"quotesAnimation\":\"QuoteISingleItem_quotesAnimation__1ig5e\",\"quotesItem\":\"QuoteISingleItem_quotesItem__3gZv-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__W73xl\"};","import {Link} from 'react-router-dom';\r\nimport classes from './QuoteISingleItem.module.css';\r\n\r\n\r\nconst QuoteISingleItem=(props)=>{\r\n    return (\r\n       \r\n      <div className={\"col-xl-4 col-lg-4 col-mb-6 col-sm-12 fade-in-right \"+classes.quotesAnimation} id={props.id} >\r\n      <figure className={\"bg-white p-3 rounded\"} style={{borderLeft:\".25rem solid #a34e78\",overflow:\"auto\"}} >\r\n        <blockquote className=\"blockquote pb-2 \">\r\n          <p>\r\n            {props.quote}\r\n          </p>\r\n        </blockquote>\r\n       \r\n        <div className=\"row\">\r\n        <figcaption className=\"blockquote-footer mb-0 font-italic\">\r\n         {props.author}\r\n        </figcaption>\r\n        <Link className=\"btn btn-info btn-sm ml-auto mr-2\" role=\"button\" to={`/quotes/${props.id}`}>\r\n         View Fullscreen\r\n       </Link>\r\n       </div>\r\n      </figure>\r\n      \r\n    </div>\r\n    \r\n        \r\n      );\r\n}\r\nexport default QuoteISingleItem;","import { Fragment, useRef, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport QuoteISingleItem from './QuoteISingleItem';\r\n\r\n\r\nconst sortQuotes = (quotes, ascending) => {\r\n  return quotes.sort((quoteA, quoteB) => {\r\n    if (ascending) {\r\n      return quoteA.id > quoteB.id ? 1 : -1;\r\n    } else {\r\n      return quoteA.id < quoteB.id ? 1 : -1;\r\n    }\r\n  });\r\n};\r\n\r\nconst QuoteManyList=(props)=>{\r\n   const filterCategory=useRef();\r\n   const history=useHistory();\r\n   const location=useLocation();\r\n   const [filteredCategory,setFilteredCategory]=useState(\"No Category\");\r\n   const queryParam=new URLSearchParams(location.search);\r\n\r\n  const isSortingAscending=queryParam.get('sort')==='asc';\r\n  let filteredData=sortQuotes(props.quotes,isSortingAscending);\r\n  const changeSortingHandler=()=>{\r\n     history.push({\r\n      pathname:location.pathname,\r\n      search:`?sort=${isSortingAscending ? 'desc':'asc'}`\r\n     });\r\n     \r\n  }\r\n  const onChangeOfCategory=()=>{\r\n    const selectedCategory=filterCategory.current.value;\r\n    setFilteredCategory(selectedCategory);\r\n    \r\n    \r\n    \r\n  }\r\n\r\n  filteredData= props.quotes.filter(quote=>{\r\n   if(filteredCategory===\"No Category\")\r\n   {\r\n    return quote;\r\n   }else\r\n    return quote.category===filteredCategory;\r\n  })\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n    <Fragment>\r\n       <div className=\"row d-flex justify-content-between\" >\r\n       \r\n         <div className=\"col-lg-3 col-md-3 col-xl-3 col-sm-2 col-7 \">\r\n          <button type=\"button\" className=\"btn btn-outline-info btn-md\" onClick={changeSortingHandler}> \r\n           Sort {isSortingAscending ? 'Descending':'Ascending'}\r\n          </button>\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-8 col-xl-3 col-sm-10 col-5 d-flex \">\r\n          <form className=\"form-inline ml-auto\" >\r\n          <div className=\"form-group \" >\r\n             {/* <label htmlFor=\"category\" className={classes.labelCategory}>Category</label> */}\r\n             <select className=\"form-control\" id=\"category\" ref={filterCategory} onChange={onChangeOfCategory}>\r\n                <option value=\"No Category\" selected >No Category</option>\r\n                <option value=\"Inspirational Quotes\">Inspirational Quotes</option>\r\n                <option value=\"Motivational Quotes\">Motivational Quotes</option>\r\n                <option value=\"Life Quotes\">Life Quotes</option>\r\n                <option value=\"Friendship Quotes\">Friendship Quotes</option>\r\n                <option value=\"Funny Quotes\">Funny Quotes</option>\r\n                <option value=\"Happiness Quotes\">Happiness Quotes</option>\r\n                <option value=\"Love Quotes\">Love Quotes</option>\r\n                <option value=\"Success Quotes\">Success Quotes</option>\r\n                <option value=\"Thoughtful Quotes\">Thoughtful Quotes</option>\r\n                <option value=\"Wisdom Quotes\">Wisdom Quotes</option>\r\n                \r\n             </select>\r\n          </div>\r\n         </form>\r\n       </div> \r\n       </div>\r\n   \r\n       <hr/>\r\n    <div className=\"row d-flex align-items-center h-100\">\r\n        {filteredData.map((quote) => (\r\n          <QuoteISingleItem\r\n            key={quote.id}\r\n            id={quote.id}\r\n            author={quote.author}\r\n            quote={quote.quote}\r\n            category={quote.category}\r\n          />\r\n        ))}\r\n      </div>\r\n      </Fragment>\r\n    );\r\n\r\n}\r\nexport default QuoteManyList;","import { Link } from \"react-router-dom\";\r\nimport classes from \"./NoQuotesFound.module.css\";\r\n\r\nconst NoQuotesFound=()=>{\r\n    return (\r\n        <div className={classes.noquotes} style={{ position: \"relative\"}}>\r\n            <p>No Quotes Found</p>\r\n            <Link to=\"/new-quote\" className=\"btn  btn-outline-secondary btn-lg\">\r\n               Add a Quote\r\n            </Link>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default NoQuotesFound;","import { useEffect } from \"react\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\nimport QuoteManyList from \"../quotesPages/QuoteManyList\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\nimport NoQuotesFound from \"../quotesPages/NoQuotesFound\";\r\n\r\nconst Quotes=()=>{\r\n    const {\r\n        sendRequest,\r\n        status,\r\n        data: loadedQuotes,\r\n        error,\r\n      } = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(()=>{\r\n      sendRequest();\r\n\r\n  },[sendRequest]);\r\n  \r\n  if(status===\"pending\"){\r\n    return (\r\n      <div className=\"centered\">\r\n          <LoadingSpinner/>\r\n      </div>\r\n    )\r\n  }\r\n  if(error){\r\n    return <p className='centered focused'>{error}</p>\r\n}\r\n\r\n   if(status==='completed' && (!loadedQuotes || loadedQuotes.length===0)){\r\n   return <NoQuotesFound/>\r\n}\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid py-5 h-100\">\r\n            {console.log(status+\" \"+loadedQuotes)}\r\n          <QuoteManyList quotes={loadedQuotes}/>\r\n        </div>\r\n    );\r\n}\r\nexport default Quotes;"],"sourceRoot":""}