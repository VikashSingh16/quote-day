{"version":3,"sources":["Components/quotesPages/NewAddingQuote.module.css","Components/quotesPages/NewAddingQuote.js","Components/Pages/NewQuote.js"],"names":["module","exports","NewAddingQuote","props","authorName","useRef","quotesText","quotesCategory","useState","isEntering","setIsEntering","className","cssClasses","quotesAnimation","onSubmit","event","preventDefault","enteredAuthorName","current","value","enteredQuotesTex","enteredQuotesCategory","onAddQuote","author","quote","category","style","position","isLoading","LoadingSpinner","htmlFor","type","id","required","ref","rows","selected","disabled","onClick","NewQuote","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","data","console","log"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,QAAU,gCAAgC,gBAAkB,wCAAwC,WAAa,qC,iHC4EpHC,EAxEM,SAACC,GAGlB,IAAMC,EAAWC,mBACXC,EAAWD,mBACXE,EAAeF,mBAYrB,MAAiCG,qBAAjC,mBAAOC,EAAP,KAAkBC,EAAlB,KAOA,OACA,qBAAKC,UAAY,wBAAwBC,IAAWC,gBAApD,SAEG,uBAAMF,UAAS,2BAAsBF,EAAW,gBAAgB,IAAOK,SArB1E,SAA2BC,GACvBA,EAAMC,iBACN,IAAMC,EAAkBb,EAAWc,QAAQC,MACrCC,EAAiBd,EAAWY,QAAQC,MACpCE,EAAsBd,EAAeW,QAAQC,MAInDhB,EAAMmB,WAAW,CAACC,OAAON,EAAkBO,MAAMJ,EAAiBK,SAASJ,KAawBK,MAAO,CAAEC,SAAU,YAAvH,UACCxB,EAAMyB,WACJ,qBAAKjB,UAAU,WAAf,SACE,cAACkB,EAAA,EAAD,MAGJ,sBAAKlB,UAAU,cAAf,UACI,uBAAOmB,QAAQ,SAAf,qBACA,uBAAOC,KAAK,OAAQpB,UAAU,eAAeqB,GAAG,SAASC,UAAQ,EAACC,IAAK9B,IACvE,qBAAKO,UAAU,iBAAf,oBACA,qBAAKA,UAAU,mBAAf,4CAEJ,sBAAKA,UAAU,aAAf,UACI,uBAAOmB,QAAQ,OAAf,kBACA,0BAAUnB,UAAU,eAAewB,KAAK,IAAIH,GAAG,OAAOC,UAAQ,EAACC,IAAK5B,IACpE,qBAAKK,UAAU,iBAAf,oBACA,qBAAKA,UAAU,mBAAf,4CAEJ,sBAAKA,UAAU,aAAf,UACI,uBAAOmB,QAAQ,WAAf,sBACA,yBAAQnB,UAAU,eAAeqB,GAAG,WAAWC,UAAQ,EAACC,IAAK3B,EAA7D,UACI,wBAAQY,MAAM,GAAGiB,UAAQ,EAACC,UAAQ,EAAlC,oBACA,wBAAQlB,MAAM,uBAAd,kCACA,wBAAQA,MAAM,sBAAd,iCACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,oBAAd,+BACA,wBAAQA,MAAM,eAAd,0BACA,wBAAQA,MAAM,mBAAd,8BACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,iBAAd,4BACA,wBAAQA,MAAM,oBAAd,+BACA,wBAAQA,MAAM,gBAAd,8BAGH,qBAAKR,UAAU,iBAAf,oBACD,qBAAKA,UAAU,mBAAf,0CAEJ,wBAAQoB,KAAK,SAASpB,UAAU,2BAA2B2B,QA9C5C,WAGf5B,GAAc,IA2Cd,6BC3CO6B,UArBA,WACb,MAA2BC,YAAQC,KAA5BC,EAAP,EAAOA,YAAYC,EAAnB,EAAmBA,OACbC,EAAQC,cAEdC,qBAAU,WACM,cAATH,GACCC,EAAQG,KAAK,aAEnB,CAACJ,EAAOC,IASX,OACI,cAAC,EAAD,CAAiBhB,UAAoB,YAATe,EAAoBrB,WAP9B,SAAC0B,GAClBC,QAAQC,IAAIF,GACZN,EAAYM","file":"static/js/6.3f543048.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"NewAddingQuote_loading__3kTHQ\",\"quotesAnimation\":\"NewAddingQuote_quotesAnimation__ij384\",\"quotesItem\":\"NewAddingQuote_quotesItem__3w0xO\"};","import { useRef, useState } from \"react\";\r\nimport LoadingSpinner from '../UI/LoadingSpinner';\r\nimport cssClasses from './NewAddingQuote.module.css';\r\n\r\n\r\nconst NewAddingQuote=(props)=>{\r\n\r\n\r\n    const authorName=useRef();\r\n    const quotesText=useRef();\r\n    const quotesCategory=useRef();\r\n    function submitFormHandler(event) {\r\n        event.preventDefault();\r\n        const enteredAuthorName=authorName.current.value;\r\n        const enteredQuotesTex=quotesText.current.value;\r\n        const enteredQuotesCategory=quotesCategory.current.value;\r\n        \r\n\r\n        \r\n        props.onAddQuote({author:enteredAuthorName,quote:enteredQuotesTex,category:enteredQuotesCategory});\r\n      }\r\n    \r\n    const [isEntering,setIsEntering]=useState();\r\n    const formValidate=()=>{\r\n      \r\n\r\n        setIsEntering(true);\r\n    }\r\n\r\n    return(\r\n    <div className= {\"container py-5 h-100 \"+cssClasses.quotesAnimation } >\r\n      \r\n       <form className={`needs-validation ${isEntering?'was-validated':''}`}  onSubmit={submitFormHandler} style={{ position: \"relative\"}}> \r\n       {props.isLoading && (\r\n          <div className=\"centered\">\r\n            <LoadingSpinner />\r\n          </div>\r\n        )}\r\n        <div className=\"form-group \" >\r\n            <label htmlFor=\"author\">Author </label>\r\n            <input type=\"text\"  className=\"form-control\" id=\"author\" required ref={authorName}/>\r\n            <div className=\"valid-feedback\">Valid.</div>\r\n            <div className=\"invalid-feedback\">Please fill out this field.</div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label htmlFor=\"text\">Text</label>\r\n            <textarea className=\"form-control\" rows=\"5\" id=\"text\" required ref={quotesText}/>\r\n            <div className=\"valid-feedback\">Valid.</div>\r\n            <div className=\"invalid-feedback\">Please fill out this field.</div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label htmlFor=\"category\">Category</label>\r\n            <select className=\"form-control\" id=\"category\" required ref={quotesCategory}>\r\n                <option value=\"\" selected disabled>Select</option>\r\n                <option value=\"Inspirational Quotes\">Inspirational Quotes</option>\r\n                <option value=\"Motivational Quotes\">Motivational Quotes</option>\r\n                <option value=\"Life Quotes\">Life Quotes</option>\r\n                <option value=\"Friendship Quotes\">Friendship Quotes</option>\r\n                <option value=\"Funny Quotes\">Funny Quotes</option>\r\n                <option value=\"Happiness Quotes\">Happiness Quotes</option>\r\n                <option value=\"Love Quotes\">Love Quotes</option>\r\n                <option value=\"Success Quotes\">Success Quotes</option>\r\n                <option value=\"Thoughtful Quotes\">Thoughtful Quotes</option>\r\n                <option value=\"Wisdom Quotes\">Wisdom Quotes</option>\r\n                \r\n             </select>\r\n             <div className=\"valid-feedback\">Valid.</div>\r\n            <div className=\"invalid-feedback\">Please select this field.</div>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary centered\" onClick={formValidate}>Add Quote</button>\r\n        </form>\r\n        </div>\r\n        \r\n\r\n    );\r\n\r\n}\r\nexport default NewAddingQuote;","import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { addQuote } from \"../lib/api\";\r\nimport NewAddingQuote from \"../quotesPages/NewAddingQuote\";\r\nconst NewQuote=()=>{\r\n  const {sendRequest,status}=useHttp(addQuote);\r\n  const history=useHistory();\r\n\r\n  useEffect(()=>{\r\n      if(status==='completed'){\r\n          history.push('/quotes');\r\n      }\r\n  },[status,history])\r\n\r\n  \r\n  const addDataHandler=(data)=>{\r\n      console.log(data);\r\n      sendRequest(data);\r\n  }\r\n  \r\n\r\n return (\r\n     <NewAddingQuote  isLoading={status==='pending'} onAddQuote={addDataHandler}/>\r\n );\r\n}\r\nexport default NewQuote;"],"sourceRoot":""}